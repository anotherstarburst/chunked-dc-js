/**
 * chunked-dc v0.2.2
 * Binary chunking for WebRTC data channels & more.
 * https://github.com/saltyrtc/chunked-dc-js#readme
 *
 * Copyright (C) 2016 Threema GmbH
 *
 * Licensed under the Apache License, Version 2.0, <see LICENSE-APACHE file>
 * or the MIT license <see LICENSE-MIT file>, at your option. This file may not be
 * copied, modified, or distributed except according to those terms.
 */
!function(e){"use strict";var t=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},n=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),i=function e(){t(this,e)};i.HEADER_LENGTH=9;var s=function(){function e(n,s,r){if(t(this,e),this.chunkId=0,r<i.HEADER_LENGTH+1)throw new Error("Chunk size must be at least "+(i.HEADER_LENGTH+1));if(s.byteLength<1)throw new Error("Array may not be empty");if(n<0||n>=Math.pow(2,32))throw new Error("Message id must be between 0 and 2**32-1");this.id=n,this.message=s,this.chunkDataSize=r-i.HEADER_LENGTH}return n(e,[{key:"next",value:function(){if(!this.hasNext)return{done:!0,value:null};var e=this.chunkId*this.chunkDataSize,t=this.message.byteLength-e,n=t<this.chunkDataSize?t:this.chunkDataSize,s=new DataView(new ArrayBuffer(n+i.HEADER_LENGTH)),r=t>n?0:1,a=this.id,h=this.nextSerial();s.setUint8(0,r),s.setUint32(1,a),s.setUint32(5,h);for(var u=0;u<n;u++){var o=i.HEADER_LENGTH+u;s.setUint8(o,this.message[e+u])}return{done:!1,value:new Uint8Array(s.buffer)}}},{key:"nextSerial",value:function(){return this.chunkId++}},{key:Symbol.iterator,value:function(){return this}},{key:"hasNext",get:function(){var e=this.chunkId*this.chunkDataSize,t=this.message.byteLength-e;return t>=1}}]),e}(),r=function(){function e(n,s){if(t(this,e),n.byteLength<i.HEADER_LENGTH)throw new Error("Invalid chunk: Too short");var r=new DataView(n),a=r.getUint8(0);this._endOfMessage=1==(1&a),this._id=r.getUint32(1),this._serial=r.getUint32(5),this._data=new Uint8Array(n.slice(i.HEADER_LENGTH)),this._context=s}return n(e,[{key:"isEndOfMessage",get:function(){return this._endOfMessage}},{key:"id",get:function(){return this._id}},{key:"serial",get:function(){return this._serial}},{key:"data",get:function(){return this._data}},{key:"context",get:function(){return this._context}}]),e}(),a=function(){function e(){t(this,e),this.messageLength=null,this.chunks=[],this.lastUpdate=(new Date).getTime()}return n(e,[{key:"addChunk",value:function(e){this.hasSerial(e.serial)||(this.chunks.push(e),this.lastUpdate=(new Date).getTime(),e.isEndOfMessage&&(this.endArrived=!0,this.messageLength=e.serial+1))}},{key:"hasSerial",value:function(e){return void 0!==this.chunks.find(function(t){return t.serial==e})}},{key:"merge",value:function(){if(!this.isComplete)throw new Error("Not all chunks for this message have arrived yet.");this.chunks.sort(function(e,t){return e.serial<t.serial?-1:e.serial>t.serial?1:0});var e=this.chunks[0].data.byteLength*this.messageLength,t=new Uint8Array(new ArrayBuffer(e)),n=0,i=this.chunks[0].data.byteLength,s=[],r=!0,a=!1,h=void 0;try{for(var u,o=this.chunks[Symbol.iterator]();!(r=(u=o.next()).done);r=!0){var c=u.value;if(c.data.byteLength>i)throw new Error("No chunk may be larger than the first chunk of that message.");t.set(c.data,n),n+=c.data.length,void 0!==c.context&&s.push(c.context)}}catch(e){a=!0,h=e}finally{try{!r&&o.return&&o.return()}finally{if(a)throw h}}return{message:t.slice(0,n),context:s}}},{key:"isOlderThan",value:function(e){var t=(new Date).getTime()-this.lastUpdate;return t>e}},{key:"isComplete",get:function(){return this.endArrived&&this.chunks.length==this.messageLength}},{key:"chunkCount",get:function(){return this.chunks.length}}]),e}(),h=function(){function e(){t(this,e),this.chunks=new Map,this.onMessage=null}return n(e,[{key:"add",value:function(e,t){var n=new r(e,t);if(!this.chunks.has(n.id)||!this.chunks.get(n.id).hasSerial(n.serial)){if(n.isEndOfMessage&&0==n.serial)return this.notifyListener(n.data,void 0===t?[]:[t]),void this.chunks.delete(n.id);var i=void 0;if(this.chunks.has(n.id)?i=this.chunks.get(n.id):(i=new a,this.chunks.set(n.id,i)),i.addChunk(n),i.isComplete){var s=i.merge();this.notifyListener(s.message,s.context),this.chunks.delete(n.id)}}}},{key:"notifyListener",value:function(e,t){null!=this.onMessage&&this.onMessage(e,t)}},{key:"gc",value:function(e){var t=0,n=!0,i=!1,s=void 0;try{for(var r,a=this.chunks[Symbol.iterator]();!(n=(r=a.next()).done);n=!0){var h=r.value,u=h[0],o=h[1];o.isOlderThan(e)&&(t+=o.chunkCount,this.chunks.delete(u))}}catch(e){i=!0,s=e}finally{try{!n&&a.return&&a.return()}finally{if(i)throw s}}return t}}]),e}();e.Chunker=s,e.Unchunker=h}(this.chunkedDc=this.chunkedDc||{});
